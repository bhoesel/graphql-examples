# Code generated by "wunderctl"; DO NOT EDIT.

schema {
  query: Query
  mutation: Mutation
}

"""
The @removeNullVariables directive allows you to remove variables with null value from your GraphQL Query or Mutation Operations.

A potential use-case could be that you have a graphql upstream which is not accepting null values for variables.
By enabling this directive all variables with null values will be removed from upstream query.

query ($say: String, $name: String) @removeNullVariables {
	hello(say: $say, name: $name)
}

Directive will transform variables json and remove top level null values.
{ "say": null, "name": "world" }

So upstream will receive the following variables:

{ "name": "world" }
"""
directive @removeNullVariables on QUERY | MUTATION

directive @hooksVariable on VARIABLE_DEFINITION

directive @jsonSchema(
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  title: String
  """
  The value of both of these keywords MUST be a string.
  
  Both of these keywords can be used to decorate a user interface with
  information about the data produced by this user interface.  A title
  will preferably be short, whereas a description will provide
  explanation about the purpose of the instance described by this
  schema.
  """
  description: String
  """
  The value of "multipleOf" MUST be a number, strictly greater than 0.
  
  A numeric instance is valid only if division by this keyword's value
  results in an integer.
  """
  multipleOf: Int
  """
  The value of "maximum" MUST be a number, representing an inclusive
  upper limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is less than or exactly equal to "maximum".
  """
  maximum: Int
  """
  The value of "exclusiveMaximum" MUST be number, representing an
  exclusive upper limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly less than (not equal to) "exclusiveMaximum".
  """
  exclusiveMaximum: Int
  """
  The value of "minimum" MUST be a number, representing an inclusive
  lower limit for a numeric instance.
  
  If the instance is a number, then this keyword validates only if the
  instance is greater than or exactly equal to "minimum".
  """
  minimum: Int
  """
  The value of "exclusiveMinimum" MUST be number, representing an
  exclusive lower limit for a numeric instance.
  
  If the instance is a number, then the instance is valid only if it
  has a value strictly greater than (not equal to) "exclusiveMinimum".
  """
  exclusiveMinimum: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is less
  than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  """
  maxLength: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  A string instance is valid against this keyword if its length is
  greater than, or equal to, the value of this keyword.
  
  The length of a string instance is defined as the number of its
  characters as defined by RFC 7159 [RFC7159].
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minLength: Int
  """
  The value of this keyword MUST be a string.  This string SHOULD be a
  valid regular expression, according to the ECMA 262 regular
  expression dialect.
  
  A string instance is considered valid if the regular expression
  matches the instance successfully.  Recall: regular expressions are
  not implicitly anchored.
  """
  pattern: String
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "maxItems" if its size is less
  than, or equal to, the value of this keyword.
  """
  maxItems: Int
  """
  The value of this keyword MUST be a non-negative integer.
  
  An array instance is valid against "minItems" if its size is greater
  than, or equal to, the value of this keyword.
  
  Omitting this keyword has the same behavior as a value of 0.
  """
  minItems: Int
  """
  The value of this keyword MUST be a boolean.
  
  If this keyword has boolean value false, the instance validates
  successfully.  If it has boolean value true, the instance validates
  successfully if all of its elements are unique.
  
  Omitting this keyword has the same behavior as a value of false.
  """
  uniqueItems: Boolean
  commonPattern: COMMON_REGEX_PATTERN
  """Optional field to apply the JSON schema to"""
  on: String
) repeatable on VARIABLE_DEFINITION

directive @rbac(
  "the user must match all roles"
  requireMatchAll: [WG_ROLE]
  "the user must match at least one of the roles"
  requireMatchAny: [WG_ROLE]
  "the user must not match all of the roles"
  denyMatchAll: [WG_ROLE]
  "the user must not match any of the roles"
  denyMatchAny: [WG_ROLE]
) on QUERY | MUTATION | SUBSCRIPTION

"""
The @fromClaim directive sets the variable to the value retrieved from the given a claim.
Adding this directive makes the operation require authentication.
"""
directive @fromClaim(name: WG_CLAIM, on: String = "") repeatable on VARIABLE_DEFINITION

"""
The directive @injectCurrentDateTime injects a DateTime string of the current date and time into the variable.
This variable MUST be a string compatible scalar. 

The default format, is: ISO 8601
If no format is chosen, the default format is used.
Custom formats are allowed by specifying a format conforming to the Golang specification for specifying a date time format.
"""
directive @injectCurrentDateTime(
  format: WunderGraphDateTimeFormat = ISO8601
  """
  customFormat must conform to the Golang specification for specifying a date time format
  """
  customFormat: String
  on: String = ""
) repeatable on VARIABLE_DEFINITION

"""
The directive @injectGeneratedUUID injects a generated UUID into the variable.
This variable MUST be a string.
At the same time, it removes the variable from the input definition,
disallowing the user to supply it.

This means, the UUID is 100% generated server-side and can be considered untempered.
"""
directive @injectGeneratedUUID(on: String = "") repeatable on VARIABLE_DEFINITION

"""
The @internalOperation Directive marks an Operation as internal.
By doing so, the Operation is no longer accessible from the public API.
It can only be accessed by internal services, like hooks.
"""
directive @internalOperation on QUERY | MUTATION | SUBSCRIPTION

"""
The directive @injectEnvironmentVariable allows you to inject an environment variable into the variable definition.
"""
directive @injectEnvironmentVariable(name: String!, on: String = "") repeatable on VARIABLE_DEFINITION

"""
The @export directive instructs the Execution Planner to export the field during the execution into the variable of the 'as' argument.
As the execution is depth first, a field can only be used after it has been exported.
Additionally, a field can only be used after using the '_join' field or on a different data source.
It's not possible to export a field and use it in for the same data source.

Note that the @export directive only works on fields that return a single value.
It's not possible to export a list or object field.
"""
directive @export(
  """The argument 'as' is the name of the variable to export the field to."""
  as: String!
) on FIELD

"""
The directive @internal marks a variable definition as internal so that clients can't access it.
The field is also not visible in the public API.
It's only being used as an internal variable to export fields into.
"""
directive @internal on VARIABLE_DEFINITION

"""
The @transform directive allows to apply transformations to the response.
By applying the directive, the shape of the response can be altered,
which will also modify the JSON-Schema of the response.
That is, you will keep full type safety and code-generation for transformed fields.
"""
directive @transform(
  """
  Using the 'get' transformation allows you to extract a nested field using a JSON path.
  This is useful to unnest data, e.g. when using the '_join' field, which adds an extra layer of nesting.
  
  Example:
  
  query GetName {
      name: me @transform(get: "info.name") {
          info {
              name
          }
      }
  }
  
  Before the transformation, the resolve looks like this:
  
  {
      "name": {
          "info": {
              "name": "John Doe"
          }
      }
  }
  
  With the transformation applied, the response will be reshaped like this:
  
  {
      "name": "John Doe"
  }
  """
  get: String
) on FIELD

"""
The @requireAuthentication Directive marks an Operation to require authentication.
Without authentication, the operation will return an Unauthorized error with status code 401.
"""
directive @requireAuthentication on QUERY | MUTATION | SUBSCRIPTION

type dcat2_Catalog {
  accessRights: String
  catalogId: Int
  catalogRecordId: Int
  catalogrecord: [dcat2_Catalogrecord]
  conformsto: [dcat2_Conformsto]
  contactPoint: String
  creator: String
  dataservice: [dcat2_Dataservice]
  dataset: [dcat2_Dataset]
  description: [dcat2_Description]
  frequency: String
  homepage: String
  id: ID!
  identifier: String
  keyword: [dcat2_Keyword]
  landingPage: String
  legalfoundation: [dcat2_Legalfoundation]
  license: String
  otheridentifier: [dcat2_Otheridentifier]
  publisher: String
  qualifiedattribution: [dcat2_Qualifiedattribution]
  releaseDate: String
  resourcelanguage: [dcat2_Resourcelanguage]
  rights: [dcat2_Rights]
  spatial: [dcat2_Spatial]
  temporalCoverage: String
  theme: [dcat2_Theme]
  themes: String
  title: [dcat2_Title]
  update: String
  _join: Query!
}

type dcat2_Catalogrecord {
  conformsTo: String
  id: ID!
  listingDate: String
  modified: String
  primaryTopic: String
  sourceMetadata: String
  _join: Query!
}

type dcat2_Conformsto {
  conformTo: String!
  id: ID!
  _join: Query!
}

""" dcat:DataService """
type dcat2_Dataservice {
  " dct:accessRights "
  accessRights: String
  " dcat:CatalogRecord "
  catalogRecordId: Int
  " dct:conformsTo "
  conformsto: [dcat2_Conformsto]
  " dcat:contactPoint "
  contactPoint: String
  " dct:creator "
  creator: String
  " dcat:servesDataset "
  dataset: [dcat2_Dataset]
  " dct:description "
  description: [dcat2_Description]
  " dcat:Distribution "
  distributionId: Int
  " dcat:endpointDescription "
  endpointDescription: String
  " dcat:endpointURL "
  endpointURL: String
  id: ID!
  " dct:identifier "
  identifier: String
  " dcat:keyword "
  keyword: [dcat2_Keyword]
  " dcat:landingPage "
  landingPage: String
  " donl:grondslag "
  legalfoundation: [dcat2_Legalfoundation]
  " dct:license "
  license: String
  " adms:identifier "
  otheridentifier: [dcat2_Otheridentifier]
  " dct:publisher "
  publisher: String
  " prov:qualifiedAttribution "
  qualifiedattribution: [dcat2_Qualifiedattribution]
  " dct:issued "
  releaseDate: String
  " dct:language "
  resourcelanguage: [dcat2_Resourcelanguage]
  rights: [dcat2_Rights]
  spatial: [dcat2_Spatial]
  " dcat:theme "
  theme: [dcat2_Theme]
  " dct:title "
  title: [dcat2_Title]
  " dct:issued "
  update: String
  _join: Query!
}

type dcat2_Dataset {
  accessRights: String
  catalogrecordId: Int
  conformsto: [dcat2_Conformsto]
  contactPoint: String
  creator: String
  description: [dcat2_Description]
  distribution: [dcat2_Distribution]
  frequency: String
  id: ID!
  identifier: String
  keyword: [dcat2_Keyword]
  landingPage: String
  legalfoundation: [dcat2_Legalfoundation]
  license: String
  otheridentifier: [dcat2_Otheridentifier]
  publisher: String
  qualifiedattribution: [dcat2_Qualifiedattribution]
  releaseDate: String
  resourcelanguage: [dcat2_Resourcelanguage]
  rights: [dcat2_Rights]
  spatial: [dcat2_Spatial]
  temporalCoverage: String
  theme: [dcat2_Theme]
  title: [dcat2_Title]
  update: String
  _join: Query!
}

type dcat2_Description {
  description: String!
  id: ID!
  resourcelanguage: [dcat2_Resourcelanguage]
  _join: Query!
}

type dcat2_Distribution {
  accesService: String
  accessURL: String
  byteSize: Int
  checksum: Int
  description: [dcat2_Description]
  downloadURL: String
  format: String
  id: ID!
  issued: String
  keyword: [dcat2_Keyword]
  legalfoundation: [dcat2_Legalfoundation]
  license: String
  mediaType: String
  modified: String
  otheridentifier: [dcat2_Otheridentifier]
  qualifiedattribution: [dcat2_Qualifiedattribution]
  rights: [dcat2_Rights]
  spatial: [dcat2_Spatial]
  supportingRole: String
  theme: [dcat2_Theme]
  title: [dcat2_Title]
  _join: Query!
}

type dcat2_Keyword {
  id: ID!
  keyword: String!
  _join: Query!
}

type dcat2_Legalfoundation {
  id: ID!
  legalFoundation: String!
  _join: Query!
}

type Mutation {
  dcat2_postCatalog(accessRights: String, catalogId: String, catalogRecordId: String, contactPoint: String, creator: String, frequency: String, homepage: String, identifier: String, landingPage: String, license: String, publisher: String, releaseDate: String, temporalCoverage: String, themes: String, update: String): dcat2_Catalog!
  dcat2_postCatalogrecord(conformsTo: String, listingDate: String, modified: String, primaryTopic: String, sourceMetadata: String): dcat2_Catalogrecord!
  dcat2_postCatalogrecordOnCatalog(catalogId: String!, conformsTo: String, listingDate: String, modified: String, primaryTopic: String, sourceMetadata: String): dcat2_Catalogrecord!
  dcat2_postConformsto(conformTo: String!): dcat2_Conformsto!
  dcat2_postConformstoOnCatalog(catalogId: String!, conformTo: String): dcat2_Conformsto!
  dcat2_postConformstoOnDataservice(conformTo: String, dataserviceId: String!): dcat2_Conformsto!
  dcat2_postConformstoOnDataset(conformTo: String, datasetId: String!): dcat2_Conformsto!
  dcat2_postDataservice(accessRights: String, catalogRecordId: String, contactPoint: String, creator: String, distributionId: String, endpointDescription: String, endpointURL: String, identifier: String, landingPage: String, license: String, publisher: String, releaseDate: String, update: String): dcat2_Dataservice!
  dcat2_postDataserviceOnCatalog(accessRights: String, catalogId: String!, catalogRecordId: String, contactPoint: String, creator: String, distributionId: String, endpointDescription: String, endpointURL: String, identifier: String, landingPage: String, license: String, publisher: String, releaseDate: String, update: String): dcat2_Dataservice!
  dcat2_postDataset(accessRights: String, catalogrecordId: String, contactPoint: String, creator: String, frequency: String, identifier: String, landingPage: String, license: String, publisher: String, releaseDate: String, temporalCoverage: String, update: String): dcat2_Dataset!
  dcat2_postDatasetOnCatalog(accessRights: String, catalogId: String!, catalogrecordId: String, contactPoint: String, creator: String, frequency: String, identifier: String, landingPage: String, license: String, publisher: String, releaseDate: String, temporalCoverage: String, update: String): dcat2_Dataset!
  dcat2_postDatasetOnDataservice(accessRights: String, catalogrecordId: String, contactPoint: String, creator: String, dataserviceId: String!, frequency: String, identifier: String, landingPage: String, license: String, publisher: String, releaseDate: String, temporalCoverage: String, update: String): dcat2_Dataset!
  dcat2_postDescription(description: String!): dcat2_Description!
  dcat2_postDescriptionOnCatalog(catalogId: String!, description: String): dcat2_Description!
  dcat2_postDescriptionOnDataservice(dataserviceId: String!, description: String): dcat2_Description!
  dcat2_postDescriptionOnDataset(datasetId: String!, description: String): dcat2_Description!
  dcat2_postDescriptionOnDistribution(description: String, distributionId: String!): dcat2_Description!
  dcat2_postDistribution(accesService: String, accessURL: String, byteSize: String, checksum: String, downloadURL: String, format: String, issued: String, license: String, mediaType: String, modified: String, supportingRole: String): dcat2_Distribution!
  dcat2_postDistributionOnDataset(accesService: String, accessURL: String, byteSize: String, checksum: String, datasetId: String!, downloadURL: String, format: String, issued: String, license: String, mediaType: String, modified: String, supportingRole: String): dcat2_Distribution!
  dcat2_postKeyword(keyword: String!): dcat2_Keyword!
  dcat2_postKeywordOnCatalog(catalogId: String!, keyword: String): dcat2_Keyword!
  dcat2_postKeywordOnDataservice(dataserviceId: String!, keyword: String): dcat2_Keyword!
  dcat2_postKeywordOnDataset(datasetId: String!, keyword: String): dcat2_Keyword!
  dcat2_postKeywordOnDistribution(distributionId: String!, keyword: String): dcat2_Keyword!
  dcat2_postLegalfoundation(legalFoundation: String!): dcat2_Legalfoundation!
  dcat2_postLegalfoundationOnCatalog(catalogId: String!, legalFoundation: String): dcat2_Legalfoundation!
  dcat2_postLegalfoundationOnDataservice(dataserviceId: String!, legalFoundation: String): dcat2_Legalfoundation!
  dcat2_postLegalfoundationOnDataset(datasetId: String!, legalFoundation: String): dcat2_Legalfoundation!
  dcat2_postLegalfoundationOnDistribution(distributionId: String!, legalFoundation: String): dcat2_Legalfoundation!
  dcat2_postOtheridentifier(otherIdentifier: String!): dcat2_Otheridentifier!
  dcat2_postOtheridentifierOnCatalog(catalogId: String!, otherIdentifier: String): dcat2_Otheridentifier!
  dcat2_postOtheridentifierOnDataservice(dataserviceId: String!, otherIdentifier: String): dcat2_Otheridentifier!
  dcat2_postOtheridentifierOnDataset(datasetId: String!, otherIdentifier: String): dcat2_Otheridentifier!
  dcat2_postOtheridentifierOnDistribution(distributionId: String!, otherIdentifier: String): dcat2_Otheridentifier!
  dcat2_postQualifiedattribution(qualifiedAttribution: String!): dcat2_Qualifiedattribution!
  dcat2_postQualifiedattributionOnCatalog(catalogId: String!, qualifiedAttribution: String): dcat2_Qualifiedattribution!
  dcat2_postQualifiedattributionOnDataservice(dataserviceId: String!, qualifiedAttribution: String): dcat2_Qualifiedattribution!
  dcat2_postQualifiedattributionOnDataset(datasetId: String!, qualifiedAttribution: String): dcat2_Qualifiedattribution!
  dcat2_postQualifiedattributionOnDistribution(distributionId: String!, qualifiedAttribution: String): dcat2_Qualifiedattribution!
  dcat2_postResourcelanguage(ResourceLanguage: String!): dcat2_Resourcelanguage!
  dcat2_postResourcelanguageOnCatalog(ResourceLanguage: String, catalogId: String!): dcat2_Resourcelanguage!
  dcat2_postResourcelanguageOnDataservice(ResourceLanguage: String, dataserviceId: String!): dcat2_Resourcelanguage!
  dcat2_postResourcelanguageOnDataset(ResourceLanguage: String, datasetId: String!): dcat2_Resourcelanguage!
  dcat2_postResourcelanguageOnDescription(ResourceLanguage: String, distributionId: String!): dcat2_Resourcelanguage!
  dcat2_postRights(rights: String!): dcat2_Rights!
  dcat2_postRightsOnCatalog(catalogId: String!, rights: String): dcat2_Rights!
  dcat2_postRightsOnDataservice(dataserviceId: String!, rights: String): dcat2_Rights!
  dcat2_postRightsOnDataset(datasetId: String!, rights: String): dcat2_Rights!
  dcat2_postRightsOnDistribution(distributionId: String!, rights: String): dcat2_Rights!
  dcat2_postSpatial(spatial: String!): dcat2_Spatial!
  dcat2_postSpatialOnCatalog(catalogId: String!, spatial: String): dcat2_Spatial!
  dcat2_postSpatialOnDataservice(dataserviceId: String!, spatial: String): dcat2_Spatial!
  dcat2_postSpatialOnDataset(datasetId: String!, spatial: String): dcat2_Spatial!
  dcat2_postSpatialOnDistribution(distributionId: String!, spatial: String): dcat2_Spatial!
  dcat2_postTheme(theme: String!): dcat2_Theme!
  dcat2_postThemeOnCatalog(catalogId: String!, theme: String): dcat2_Theme!
  dcat2_postThemeOnDataservice(dataserviceId: String!, theme: String): dcat2_Theme!
  dcat2_postThemeOnDataset(datasetId: String!, theme: String): dcat2_Theme!
  dcat2_postThemeOnDistribution(distributionId: String!, theme: String): dcat2_Theme!
  dcat2_postTitle(title: String!): dcat2_Title!
  dcat2_postTitleOnCatalog(catalogId: String!, title: String): dcat2_Title!
  dcat2_postTitleOnDataservice(dataserviceId: String!, title: String): dcat2_Title!
  dcat2_postTitleOnDataset(datasetId: String!, title: String): dcat2_Title!
  dcat2_postTitleOnDistribution(distributionId: String!, title: String): dcat2_Title!
}

type dcat2_Otheridentifier {
  id: ID!
  otherIdentifier: String!
  _join: Query!
}

type dcat2_Qualifiedattribution {
  id: ID!
  qualifiedAttribution: String!
  _join: Query!
}

type Query {
  dcat2_catalog(id: ID): dcat2_Catalog
  dcat2_catalogrecord(id: ID): dcat2_Catalogrecord
  dcat2_catalogrecords(filter: String, skip: Int, take: Int): [dcat2_Catalogrecord!]!
  dcat2_catalogs(filter: String, skip: Int, take: Int): [dcat2_Catalog!]!
  " dcat:DataService "
  dcat2_dataservice(id: ID): dcat2_Dataservice
  " dcat:DataService "
  dcat2_dataservices(filter: String, skip: Int, take: Int): [dcat2_Dataservice!]!
  dcat2_dataset(id: ID): dcat2_Dataset
  dcat2_datasets(filter: String, skip: Int, take: Int): [dcat2_Dataset!]!
  dcat2_distribution(id: ID): dcat2_Distribution
  dcat2_distributions(filter: String, skip: Int, take: Int): [dcat2_Distribution!]!
  dcat2_info: String!
  woz_info: String!
  woz_wozobject(allecycli: Boolean, objectnr: ID): woz_Wozobject
  woz_wozobjects(filter: String, skip: Int, take: Int): [woz_Wozobject!]!
  product_pfb_getProductPfb(catalogus: String, zoekterm: String): [product_pfb_QueryGetProductPfb]
}

type dcat2_Resourcelanguage {
  ResourceLanguage: String!
  id: ID!
  _join: Query!
}

type dcat2_Rights {
  id: ID!
  rights: String!
  _join: Query!
}

type dcat2_Spatial {
  id: ID!
  spatial: String!
  _join: Query!
}

type dcat2_Theme {
  id: ID!
  theme: String!
  _join: Query!
}

type dcat2_Title {
  id: ID!
  title: String!
  _join: Query!
}

type woz_Taxtaxatie {
  adresbenamingnr: Int
  bijzwaarderingsdom: String
  bouwlaagtoegang: String
  bouwtypecode: String
  broncode: String
  cbsvrijsteldom: String
  ddsituatie: String
  ddtaxatie: String
  ddtoestand: String
  ddvastgesteld: String
  doelmatigheiddom: String
  eucompromisozb: Int
  eucompromisozbgn: Int
  eucompromiswoz: Int
  eugebouwd: Int
  euozb: Int
  euozbgn: Int
  euprognose: Int
  euprognosegebr: String
  eutaxatie: Int
  euwoz: Int
  functionaliteitdom: String
  gebouwddom: String
  gebruiktemethodiekdom: String
  groepaanduiding: String
  groepnr: Int
  identificatietvs: String
  indcourant: String
  indgebouwd: String
  indreferentie: String
  indvervallen: String
  indwoning: String
  inpandigdom: String
  jjbouw: Int
  jjbouwrange: String
  jjrenovatie: Int
  kwaliteitdom: String
  leegstandsrisicodom: String
  liggingdom: String
  locatiedom: String
  monumentcode: String
  objectnr: Int
  omschrijving: String
  omzetbelastingdom: String
  onderhouddom: String
  ppgereed: Int
  pprenovatie: Int
  ppstijging: Int
  procesmutatie: String
  resultaatcontroledom: String
  resultaatdom: String
  srtobjectcode: String
  stopcode: String
  subjectnreig: Int
  subjectnrgeb: Int
  taxatiebrondom: String
  taxatienr: ID!
  taxcompromiscode: String
  taxredencode: String
  taxverslagdom: String
  tijdvaknr: Int
  transactienr: Int
  ttmutatie: String
  ttopvoer: String
  ttwozwijziging: String
  uitstralingdom: String
  voorzieningdom: String
  waardegebiedcode: String
  waardvoorschriftdom: String
  _join: Query!
}

type woz_Wozbelang {
  aandeigenaargebrdom: String
  belangnr: ID!
  einderegnr: Int
  eindestatusdom: String
  ingangregnr: Int
  ingangstatusdom: String
  procesmutatie: String
  stopcode: String
  tteindereg: String
  ttingangreg: String
  ttmutatie: String
  ttopvoer: String
  wozbelangcyclus: [woz_Wozbelangcyclus]
  _join: Query!
}

type woz_Wozbelangcyclus {
  belangcyclusnr: ID!
  belangstatusdom: String
  broncode: String
  ddconstatering: String
  einderegnr: Int
  eindestatusdom: String
  groeprelcode: String
  indcumsuis: String
  indinonderzoek: String
  ingangregnr: Int
  ingangstatusdom: String
  procesmutatie: String
  redenconstateringcode: String
  subjectnr: Int
  tteinde: String
  tteindereg: String
  ttingang: String
  ttingangreg: String
  ttmutatie: String
  ttopvoer: String
  zakelijkrechtcode: String
  _join: Query!
}

type woz_Wozdeelobject {
  deelobjectnr: ID!
  einderegnr: Int
  eindestatusdom: String
  indtaxatie: String
  indwoz: String
  ingangregnr: Int
  ingangstatusdom: String
  nummer: Int
  ouderdeelobject: Int
  procesmutatie: String
  tteindereg: String
  ttingangreg: String
  ttmutatie: String
  ttopvoer: String
  usermutatie: String
  wozdeelobjectcyclus: [woz_Wozdeelobjectcyclus]
  _join: Query!
}

type woz_Wozdeelobjectcode {
  aantaltondom: String
  aantekeningtondom: String
  afrondfactor: Int
  afrondfactortondom: String
  bouwjaartondom: String
  breedtetondom: String
  ddeinde: String
  ddingang: String
  deelobjectcode: ID!
  defaultarchetypecode: String
  defaultbrutonettoinhdom: String
  defaultbrutonettooppdom: String
  defaultdeelobjectstatusdom: String
  defaultfunctionaliteitdom: String
  defaultleegstandsrisicodom: String
  defaultlocatiedom: String
  defaultomzetbelastingdom: String
  defaulttaxmethodiekdom: String
  doelmatigheiddom: String
  doelmatigheidtondom: String
  eenheiddom: String
  eenheidtondom: String
  eudefault: Int
  euminimum: Int
  formule: String
  hoogtetondom: String
  huurprijstondom: String
  indbagbouwjaarovernemen: String
  indbagobjectovernemen: String
  indbagobjectverplicht: String
  indbagoppervlakteovernemen: String
  indgebouwd: String
  indmeetelleninhoud: String
  indmeetellenoppervlakte: String
  indoverschrijvenmodeldeelobj: String
  indtaxatie: String
  indtonenfront: String
  indvervallen: String
  indvmlmuteren: String
  indvmltoelichting: String
  indvmlverwijderen: String
  indwoning: String
  indwoz: String
  inhoudtondom: String
  itzafactor: Int
  itzafactortondom: String
  kapfactortondom: String
  kwaliteitdom: String
  kwaliteittondom: String
  laagtondom: String
  lengtetondom: String
  liggingdom: String
  liggingtondom: String
  maatvoeringtondom: String
  modeltypedom: String
  omschrijving: String
  omschrijvingverkort: String
  onderhouddom: String
  onderhoudtondom: String
  opptondom: String
  ppfactortondom: String
  ppmarktontwikkeling: Int
  pprenovatietondom: String
  procesmutatie: String
  srtdeeldom: String
  stuftaxonderdeelcode: String
  ttmutatie: String
  ttopvoer: String
  uitstralingdom: String
  uitstralingtondom: String
  usermutatie: String
  voorzieningendom: String
  voorzieningentondom: String
  vrijstelcode: String
  vrijstellingtondom: String
  waardetondom: String
  _join: Query!
}

type woz_Wozdeelobjectcyclus {
  aakamers: Int
  aantal: Int
  aantekening: String
  archetypecode: String
  bagmemo: String
  bouwjaarklasse: String
  bouwlaag: Int
  breedte: Int
  brutonettoinhdom: String
  brutonettooppdom: String
  clusternr: Int
  deelobjectcyclusnr: ID!
  deelobjectgeometrienr: Int
  deelobjectstatusdom: String
  doelmatigheiddom: String
  einderegnr: Int
  eindestatusdom: String
  energielabeldom: String
  frontbreedte: Int
  functionaliteitdom: String
  gebroppervlakte: Int
  groepnr: Int
  hoogte: Int
  indprimair: String
  indprimairtaxatie: String
  indwoning: String
  ingangregnr: Int
  ingangstatusdom: String
  inhoud: Int
  jjbouw: Int
  jjrenovatie: Int
  kwaliteitdom: String
  leegstandsrisicodom: String
  lengte: Int
  liggingdom: String
  ligplaatsbagid: String
  locatiedom: String
  meerekenengvwhwkdom: String
  nraanduidingbagid: String
  omschrijving: String
  omschrijvingaanvullend: String
  omzetbelastingdom: String
  onderhouddom: String
  ontslverdiepingdom: String
  oppervlakte: Int
  pandbagid: String
  ppfactor: Int
  ppgereed: Int
  pprenovatie: Int
  procesmutatie: String
  redennietkoppelenbagobject: String
  standplaatsbagid: String
  taxmethodiekdom: String
  taxonderdeelnr: Int
  tteinde: String
  tteindereg: String
  ttingang: String
  ttingangreg: String
  ttmutatie: String
  ttopvoer: String
  uitstralingdom: String
  usermutatie: String
  verblijfsobjectbagid: String
  voorzieningdom: String
  vrijstelcode: String
  vrijveld1: String
  vrijveld2: String
  vrijveld3: String
  vrijveld4: String
  vrijveld5: String
  vrijveld6: String
  vrijveld7: String
  vrijveld8: String
  vrijveld9: String
  vrijveld10: String
  vrijveld11: String
  vrijveld12: String
  vrijveld13: String
  vrijveld14: String
  vrijveld15: String
  vrijveld16: String
  vrijveld17: String
  vrijveld18: String
  vrijveld19: String
  vrijveld20: String
  wozdeelobjectcode: woz_Wozdeelobjectcode
  zone: String
  _join: Query!
}

type woz_Wozobject {
  einderegnr: Int
  eindestatusdom: String
  indberichtenverkeer: String
  indcluster: String
  ingangregnr: Int
  ingangstatusdom: String
  objectnr: ID!
  procesmutatie: String
  stopcode: String
  taxtaxatie: [woz_Taxtaxatie]
  tteindereg: String
  ttingangreg: String
  ttmutatie: String
  ttopvoer: String
  usermutatie: String
  wozbelang: [woz_Wozbelang]
  wozdeelobject: [woz_Wozdeelobject]
  wozobjectcyclus: [woz_Wozobjectcyclus]
  wozobjectnr: String
  wozobjectsrtdom: String
  _join: Query!
}

type woz_Wozobjectcyclus {
  bijzwaarderingsdom: String
  bouwstroomcode: String
  bouwtypecode: String
  broncode: String
  doelmatigheiddom: String
  einderegnr: Int
  eindestatusdom: String
  functionaliteitdom: String
  gebouwddom: String
  gebruiksdom: String
  gemeentecode: String
  groepnr: Int
  identaanvullend: String
  indbemalen: String
  indcourant: String
  indgbamuteer: String
  indinonderzoek: String
  indlift: String
  ingangregnr: Int
  ingangstatusdom: String
  inonderzoeknr: Int
  kwaliteitdom: String
  leegstandsrisicodom: String
  liggingdom: String
  ligplaatsbagid: String
  locatiedom: String
  lozingcode: String
  lozingtypedom: String
  monumentdom: String
  nraanduidingbagid: String
  nraanduidingnr: Int
  objectcyclusnr: ID!
  objectgeometrienr: Int
  omschrijving: String
  omschrijvingaanvullend: String
  omzetbelastingdom: String
  onderhouddom: String
  ontbrekennutsdom: String
  openbareruimtebagid: String
  oppgrond: Int
  oppmeegetaxeerd: Int
  ppgereed: Int
  primairdeelobjectnr: Int
  procesmutatie: String
  runselectienr: Int
  standplaatsbagid: String
  stijlletter: String
  taxateur: String
  tteinde: String
  tteindereg: String
  ttingang: String
  ttingangreg: String
  ttmutatie: String
  ttopvoer: String
  uitstralingdom: String
  usermutatie: String
  verblijfsobjectbagid: String
  voorzieningdom: String
  vrijkenmerkcode: String
  vrijstelcode: String
  waardegebiedcode: String
  waterschapcode: String
  werkgebiedcontrollercode: String
  werkgebiedtaxateurcode: String
  werkvoorbereider: String
  wozobjectstatusdom: String
  wozsrtobjectcode: woz_Wozsrtobjectcode
  _join: Query!
}

type woz_Wozsrtobjectcode {
  categoriecode: String
  ddeinde: String
  ddingang: String
  gebouwddom: String
  gebruiksdom: String
  indcontrvreovl: String
  indexporteerortax: String
  indgba: String
  indgbawoning: String
  indkvk: String
  indstufafval: String
  indvervallen: String
  indwoning: String
  indwonwozgebruik: String
  omschrijving: String
  omschrijvingverkort: String
  procesmutatie: String
  srtobjectcode: ID!
  stfgebouwddom: String
  stfgebruiksdom: String
  subcategoriecode: String
  ttmutatie: String
  ttopvoer: String
  usermutatie: String
  _join: Query!
}

type product_pfb_QueryGetProductPfb {
  catalog: String
  title: String
  description: String
  accessurl: String
  format: String
  _join: Query!
}

enum COMMON_REGEX_PATTERN {
  EMAIL
  DOMAIN
}

enum WG_ROLE {
  admin
  user
}

"""Well known claims - https://www.iana.org/assignments/jwt/jwt.xhtml"""
enum WG_CLAIM {
  """iss"""
  ISSUER
  """deprecated alias for ISSUER"""
  PROVIDER
  """sub"""
  SUBJECT
  """alias for sub"""
  USERID
  """name"""
  NAME
  """given_name"""
  GIVEN_NAME
  """family_name"""
  FAMILY_NAME
  """middle_name"""
  MIDDLE_NAME
  """nickname"""
  NICKNAME
  """preferred_username"""
  PREFERRED_USERNAME
  """profile"""
  PROFILE
  """picture"""
  PICTURE
  """website"""
  WEBSITE
  """email"""
  EMAIL
  """email_verified"""
  EMAIL_VERIFIED
  """gender"""
  GENDER
  """birthdate"""
  BIRTH_DATE
  """zoneinfo"""
  ZONE_INFO
  """locale"""
  LOCALE
  """location"""
  LOCATION
}

enum WunderGraphDateTimeFormat {
  "2006-01-02T15:04:05-0700"
  ISO8601
  "Mon Jan _2 15:04:05 2006"
  ANSIC
  "Mon Jan _2 15:04:05 MST 2006"
  UnixDate
  "Mon Jan 02 15:04:05 -0700 2006"
  RubyDate
  "02 Jan 06 15:04 MST"
  RFC822
  "02 Jan 06 15:04 -0700"
  RFC822Z
  "Monday, 02-Jan-06 15:04:05 MST"
  RFC850
  "Mon, 02 Jan 2006 15:04:05 MST"
  RFC1123
  "Mon, 02 Jan 2006 15:04:05 -0700"
  RFC1123Z
  "2006-01-02T15:04:05Z07:00"
  RFC3339
  "2006-01-02T15:04:05.999999999Z07:00"
  RFC3339Nano
  "3:04PM"
  Kitchen
  "Jan _2 15:04:05"
  Stamp
  "Jan _2 15:04:05.000"
  StampMilli
  "Jan _2 15:04:05.000000"
  StampMicro
  "Jan _2 15:04:05.000000000"
  StampNano
}